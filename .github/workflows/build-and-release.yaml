name: Build and Release Snap

on:
  push:
    branches:
    - master

jobs:
  build-stable:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
        - linux/amd64
        - linux/386
        - linux/arm64
        - linux/arm/v7
    steps:
    - uses: actions/checkout@v2
    - uses: crazy-max/ghaction-docker-buildx@v1
    - id: build
      run: |
        docker buildx build \
          --build-arg PLAYTEST=false \
          --platform "${{ matrix.architecture }}" \
          --output type=local,dest=$GITHUB_WORKSPACE .

        echo ::set-output name=snap::$(find $GITHUB_WORKSPACE -type f -name "*.snap" | head -n1)
    - uses: diddlesnaps/snapcraft-review-tools-action@v1
      with:
        snap: ${{ steps.build.outputs.snap }}
        isClassic: 'false'
    - uses: snapcore/action-publish@v1
      with:
        store_login: ${{ secrets.STORE_LOGIN }}
        snap: ${{ steps.build.outputs.snap }}
        release: beta

  build-playtest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
        - linux/amd64
        - linux/386
        - linux/arm64
        - linux/arm/v7
    steps:
    - uses: actions/checkout@v2
    - uses: crazy-max/ghaction-docker-buildx@v1
    - id: build
      run: |
        docker buildx build \
          --build-arg PLAYTEST=true \
          --platform "${{ matrix.architecture }}" \
          --output type=local,dest=$GITHUB_WORKSPACE .

        echo ::set-output name=snap::$(find $GITHUB_WORKSPACE -type f -name "*.snap" | head -n1)
    - uses: diddlesnaps/snapcraft-review-tools-action@v1
      with:
        snap: ${{ steps.build.outputs.snap }}
        isClassic: 'false'
    - uses: snapcore/action-publish@v1
      with:
        store_login: ${{ secrets.STORE_LOGIN }}
        snap: ${{ steps.build.outputs.snap }}
        release: edge
